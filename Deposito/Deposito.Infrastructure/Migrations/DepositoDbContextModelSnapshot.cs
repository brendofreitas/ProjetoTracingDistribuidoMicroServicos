// <auto-generated />
using System;
using Deposito.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Deposito.Infrastructure.Migrations
{
    [DbContext(typeof(DepositoDbContext))]
    partial class DepositoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Deposito.Domain.Entities.MovimentacaoEstoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataMovimentacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("MovimentacaoEstoque");
                });

            modelBuilder.Entity("Deposito.Domain.Entities.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Produto 1",
                            Preco = 5.25m,
                            Quantidade = 0
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Produto 2",
                            Preco = 10.5m,
                            Quantidade = 0
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Produto 3",
                            Preco = 15.75m,
                            Quantidade = 0
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Produto 4",
                            Preco = 21m,
                            Quantidade = 0
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Produto 5",
                            Preco = 26.25m,
                            Quantidade = 0
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Produto 6",
                            Preco = 31.5m,
                            Quantidade = 0
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Produto 7",
                            Preco = 36.75m,
                            Quantidade = 0
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Produto 8",
                            Preco = 42m,
                            Quantidade = 0
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Produto 9",
                            Preco = 47.25m,
                            Quantidade = 0
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Produto 10",
                            Preco = 52.5m,
                            Quantidade = 0
                        },
                        new
                        {
                            Id = 11,
                            Nome = "Produto 11",
                            Preco = 57.75m,
                            Quantidade = 0
                        },
                        new
                        {
                            Id = 12,
                            Nome = "Produto 12",
                            Preco = 63m,
                            Quantidade = 0
                        },
                        new
                        {
                            Id = 13,
                            Nome = "Produto 13",
                            Preco = 68.25m,
                            Quantidade = 0
                        },
                        new
                        {
                            Id = 14,
                            Nome = "Produto 14",
                            Preco = 73.5m,
                            Quantidade = 0
                        },
                        new
                        {
                            Id = 15,
                            Nome = "Produto 15",
                            Preco = 78.75m,
                            Quantidade = 0
                        },
                        new
                        {
                            Id = 16,
                            Nome = "Produto 16",
                            Preco = 84m,
                            Quantidade = 0
                        },
                        new
                        {
                            Id = 17,
                            Nome = "Produto 17",
                            Preco = 89.25m,
                            Quantidade = 0
                        },
                        new
                        {
                            Id = 18,
                            Nome = "Produto 18",
                            Preco = 94.5m,
                            Quantidade = 0
                        },
                        new
                        {
                            Id = 19,
                            Nome = "Produto 19",
                            Preco = 99.75m,
                            Quantidade = 0
                        },
                        new
                        {
                            Id = 20,
                            Nome = "Produto 20",
                            Preco = 105m,
                            Quantidade = 0
                        });
                });

            modelBuilder.Entity("Deposito.Domain.Entities.MovimentacaoEstoque", b =>
                {
                    b.HasOne("Deposito.Domain.Entities.Produto", "Produto")
                        .WithMany("Movimentacoes")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Deposito.Domain.Entities.Produto", b =>
                {
                    b.Navigation("Movimentacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
